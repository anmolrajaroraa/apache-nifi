1. Decompress and untar
	bin directory -> ./nifi.sh <command>
-start -> start NiFi in the background
-stop -> stop NiFi that's running in background
-status -> provides you current status of nifi
-run -> run NiFi in the cmd directly
-service -> install NiFi as a service
	service nifi start
	service nifi stop
	service nifi status

1. Decompress
	bin directory -> double-click run-nifi.bat

These directories are created :-
1. content_repository
2. database_repository
3. flowfile_repository
4. provenance_repository
5. work directory
6. logs directory

Go to browser -> localhost:8080/nifi

Apache NiFi was built to manage data flow
-systems fail
-data access exceeds capacity to consume
-noise today can become resource tomorrow
-boundary conditions
-compliance and security
-continuous improvement occurs in production

Core components:- (FBP programming)
1. FlowFile (information packet)
2. FlowFile Processor
3. FlowFile Controller (Scheduler)
4. Process Group

Before zero-master clustering
Master-slave relationship. Master is single point of failure. If master dies, slaves still keep on working but we cannot manage them or make any changes in the dataflow.

Zero-master clustering
No master is there. Cluster coordinator was introduced. Primary node and cluster coordinator are selected by zookeeper. No single point of failure.


Cluster is a group of nodes performing same tasks but on different data sets.

Why cluster?
1. To group all the nodes to increase processing capability
2. Clustering allows NiFi Administrators or DFM(DataFlow Managers) to have a single interface through which they can make dataflow changes and monitor the dataflow and status of all the nodes

Node - Nodes do the actual processing. Node is just a machine comprising of 3 simple resources - CPU power, RAM, disk space

ZooKeeper - electing Primary Node, electing Cluster Coordinator and acting as a middleware between different nodes so that they can communicate to each other

Cluster Coordinator - managing the nodes, providing up-to-date flow to newly-joining node, replicating the changes to all the nodes in the cluster

Primary Node - Every cluster has one Primary Node. On this node, we can run 'Isolated Processors'. ZooKeeper automatically selects a node to become Primary Node.

Isolated Processors - These processors run in isloated environment on the Primary Node. Eg :- GetSFTP Processor

Heartbeats - Nodes emit health and status check after every 5 seconds to the cluster coordinator to let it know that they are working in sync and are alive

Communication within the cluster

Managing the nodes

Steps to decommission a node:-
1. Disconnect the node
2. Offload the node
3. Delete the node
4. Restart nifi service 

NiFi Toolkit
- nifi get-node
- nifi get-nodes
- nifi connect-node
- nifi disconnect-node
- nifi offload-node
- nifi delete-node

Flow election
When a cluster first starts up, voting is done for the copy of flows submitted by nodes to the cluster coordinator. If two flows match. a vote is casted. And the flow having majority of votes is selected as cluster's flow. All the nodes not having this flow are disconnected and are provided with a copy of up-to-date flow to become compatible to cluster's flow.
If no flow gets majority, cluster coordinator selects the correct flow and rest of the procedure is same.
nifi.cluster.flow.max.candidtates = <number>
nifi.cluster.flow.max.wait.time = <time>

Steps to setup a cluster
1. Edit /etc/hosts file on both the machines
192.168.56.1	node1 (if it doesnt works use local ip of VM)
192.168.1.76	node2

2. Edit zookeeper.prop
Change clientport if you want to

server.1=node1:2888:3888

server.2=node2:2888:3888

echo 1 > ./state/zookeeper/myid

3. In nifi.properties
nifi.state.management.embedded.zookeeper.start=true
nifi.remote.input.host=node2
nifi.remote.input.socket.port=9998
nifi.web.http.host=node2

nifi.web.http.port=8010
nifi.cluster.is.node=true
nifi.cluster.node.address=node2
nifi.cluster.node.protocol.port=9999
nifi.cluster.flow.election.max.candidates=2
nifi.zookeeper.connect.string=node1:2181,node2:2182



DataFlow Manager - A NiFi user who has permissions to add, remove and modify components of a NiFi dataflow.

FlowFile - FlowFile represents a single piece of data. FlowFile is made up of two components - content (data that is represented by FlowFile), attributes(characteristics about data, metadata)
- uuid - unique identifier for FlowFile
- filename - human-readable name used while storing FlowFiles
- path - complete heirarchy path to the location where FlowFile was stored

Processor - A NiFi component that can pull, publish, route, transform data and extract information from FlowFiles.

Relationship - Processor can have 0 or more relationships. Relationships have names to indicate the result of processing a FlowFile. Eg:- success. After processing, flowfile is routed to the relationship. DFM can use these relationships to specify where the files should go based on the processing result.

Connection - We join components using connections. Connections consist of one or more relationships. We can specify which relationship is to be used for a particular connection. This provides us an ability to transfer flowfile in differnet ways to different destinations based on processing outcome. Connections houses FlowFile Queue.

Controller Service - They are extension points. Commonly used Controller Service is StandardSSLContextService
The idea behind extension point is to configure information in Controller Service rather than doing it on every processor.

Reporting Task - Tasks that run in background and provide stats about what is going on in a NiFi instance
ControllerStatusReportingTask
MonitorDiskUsage
MonitorMemory

Funnel - A component that is used to combine data from several Connections into a single connection.

Process Group - NiFi allows us to group multiple processors in a Process Group to ease the visibility on canvas and to allow us to manipulate our processors more easily. It's beneficial only when we have complex dataflow and large number of components.

Port - Process Groups need a way to connect to each other. Input and output ports are present there.

Remote Process Group - Sometimes we want to transfer data from one instance of NiFi to another instance, remote process groups are the way to doing this.

CRON expression

1. seconds	0-59
2. minutes	0-59
3. hours	0-23
4. day of month	1-31
5. month	1-12 or JAN-DEC
6. day of week	1-7 or SUN-SAT
7. (optional) year	empty or 2019-2030


Number(10), Range(1-10), Increment(0/15 -> 0, 15, 30, 45)

* - all values are valid
? - no specific value has been given  (valid only for days of month and week)
L - select the last occurence of this particular value

0 0 13 * * ? -> At 1pm daily
0 15 13 ? * 2-6 -> From monday-friday at 1:15 pm
0 15 13 ? * 6L 2019-2022 -> From 2019-2022, on last friday of every month at 1:15 pm
*****? - every second


anmolarora1711@gmail.com














Please take this survey :)
https://goo.gl/forms/ZkAV9dZLshT5jfrN2
